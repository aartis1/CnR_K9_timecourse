#!/bin/bash
#SBATCH --job-name=CnR_setab_MO		                        # Job name
#SBATCH --partition=batch		                            # Partition (queue) name
#SBATCH --ntasks=1	                                # Single task job
#SBATCH --cpus-per-task=24		                            # Number of cores per task - match this to the num_threads used by BLAST
#SBATCH --mem=120gb			                                # Total memory for job
#SBATCH --time=48:00:00  		                            # Time limit hrs:min:sec
#SBATCH --output=/scratch/ara67776/CnR_setAB			    # Location of standard output and error log files (replace cbergman with your myid)
#SBATCH --mail-user=ara67776@uga.edu                    # Where to send mail (replace cbergman with your myid)
#SBATCH --mail-type=ALL                            # Mail events (BEGIN, END, FAIL, ALL)
#SBATCH --output=/home/ara67776/work/error/log.%j			    # Location of standard output and error log files (replace cbergman with your myid)

#set output directory
OUTDIR="/scratch/ara67776/CnR_timecourse"

# ml STAR
# for file in $OUTDIR/raw/CnR_timecourse_K9_2_to_4h/*_R*.fastq.gz;
# do
#   if [[ $prefix ]]; then
#         base=$(basename ${first} _R1.fastq.gz)
#         sh /home/ara67776/scripts/PE_trim_and_star.sh -o $OUTDIR -n $base -m one $first $file
#         prefix=
#     else
#         first=$file
#         prefix=${file%%_*}
#     fi
# done



###aligning to ecoli genome
# curl -s https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/005/845/GCF_000005845.2_ASM584v2/GCF_000005845.2_ASM584v2_genomic.fna.gz | gunzip -c > $OUTDIR/ecoli_refseq.fa
###note here that STAR suggests SAindex = 10 but that makes the alignment FAIL, do 8 instead
# ml STAR
# STAR --runThreadN 20 --genomeSAindexNbases 8 --runMode genomeGenerate --genomeDir $OUTDIR/ecoli_genome --genomeFastaFiles $OUTDIR/ecoli_refseq.fa
#
# for file in $OUTDIR/trimmed/*_val_*.fq.gz;
# do
#   if [[ $prefix ]]; then
#         base=$(basename ${first} _R1_val_1.fq.gz)
#         STAR --runThreadN 20 --genomeDir $OUTDIR/ecoli_genome --outFileNamePrefix $OUTDIR/bams/"$base"_ecoli \
#         --readFilesCommand zcat --readFilesIn "$first" "$file" --outSAMtype BAM SortedByCoordinate \
#         --outSAMmultNmax 1 --alignEndsType EndToEnd --alignIntronMax 1 --alignMatesGapMax 2000
#         prefix=
#     else
#         first=$file
#         prefix=${file%%_*}
#     fi
# done

####Remove PCR duplicates
# ml picard
# module load SAMtools
#
# for infile in $OUTDIR/bams/*q1.bam
# do
#   base=$(basename ${infile} _q1.bam)
#   java -jar $EBROOTPICARD/picard.jar MarkDuplicates -I $infile -M $OUTDIR/bams/"$base"_dupmetrics.txt -O $OUTDIR/bams/"$base"_nodups.bam --REMOVE_DUPLICATES true
# done

#merging IgG sampled together to create uniformity in peak calling later
ml SAMtools
samtools merge -f $OUTDIR/bams/mIgG_nodups.bam $OUTDIR/bams/*IgG*[1-3]_nodups.bam
samtools merge -f $OUTDIR/bams/mIgG_ecoli_nodups.bam $OUTDIR/bams/*IgG*ecoli*nodups.bam

#Now we need to extract all the aligned reads in preperation for spike in normalization
# module load BEDTools/2.29.2-GCC-8.3.0
#
# for infile in $BASEDIR/bams/*nodups.bam
# do
#   base=$(basename ${infile} .bam)
#   bedtools bamtobed -i $infile | awk -v OFS='\t' '{len = $3 - $2; print $0, len }' > $BASEDIR/bams/$base.btb.bed
# done

##spike in normalization
# mkdir $BASEDIR/bdgrphs
#
# for file in $BASEDIR/bams/*.btb.bed;
# do
#   if [[ $prefix ]]; then
#         base=$(basename ${file} _nodups.btb.bed)
#         sh $TOOLDIR/DNA_spike.kd.sh $file $first \
#         100000 bga $BASEDIR/genome/chrNameLength.txt 1 1000 $BASEDIR/bdgrphs/"$base".norm.bga
#         prefix=
#     else
#         first=$file
#         prefix=${file%%_*}
#     fi
# done
